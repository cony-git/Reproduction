import sys, os

if __name__ == "__main__":
    # file, containing malware type/family to get stats 
    filename = sys.argv[1]
    # check if getting stats for malware type or family
    if len(sys.argv) == 3:
        av_scanner = sys.argv[2].lower()
        typ = "maltype"
    else:
        typ = "malfamily"

    # open file, containing malware type/family
    with open(filename) as f:
        contents = f.readlines()
    print("Total number samples: {}".format(len(contents)))

    stats_dict = {}

    # For malware type
    if typ == "maltype":
        if av_scanner == "malwarebytes":
            maltypes = [c.split(".")[0] for c in contents]
        elif av_scanner == "microsoft":
            maltypes = [c.split(":")[0] for c in contents]
        # Process the malware type results, obtained from virustotal reports
        with open("{}_types_{}.txt".format(av_scanner, len(contents)), "w+") as f:
            for i in maltypes:
                f.write("{}\n".format(i))
        # Get stats
        for i in maltypes:
            maltyp = i.split("\t")[-1]
            if maltyp not in stats_dict.keys():
                stats_dict[maltyp] = 1
            else:
                stats_dict[maltyp] += 1
    # For malware family
    elif typ == "malfamily":
        # Get stats
        for i in contents:
            malfam = i.split("\t")[-1].replace("\n", "")
            if "SINGLETON" in malfam:
                malfam = "SINGLETON"
            if malfam not in stats_dict.keys():
                stats_dict[malfam] = 1
            else:
                stats_dict[malfam] += 1

    # Sort the stats_dict before writing to text file
    stats_sorted = {k: v for k, v in sorted(stats_dict.items(), key=lambda item: item[1],  reverse=True)}
    with open("{}_labels_size_{}.txt".format(typ, len(stats_sorted.keys())), "w+") as f:
        for i in stats_sorted.keys():
            f.write("{:20s}{}\n".format(i, stats_sorted[i]))

    print("Number of {} labels: {}\n{}".format(typ, len(stats_sorted.keys()), stats_sorted))
