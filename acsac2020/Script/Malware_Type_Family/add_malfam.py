import pandas as pd

if __name__ == "__main__":

    # Text file containing family labels from avclass
    malfamfile = "avclass_malfamily_21752.txt"
    # Malware dataset csv file to add family labels
    maldataset = "../../../Dataset_new/mal_dataset_22471.csv"

    # Selected families to add; normally put families with sample size > 200
    target_fam = ["fareit", "virlock", "lamer", "delf", "sivis", "ardurk", "installmonster", "wabot", "emotet", "gandcrab", "sytro", "flystudio", "vbclone", "picsys", "gator", "linkury", "ursnif", "virut", "berbew", "unruy", "razy", "gamarue"]

    # Open and read text file containing family labels
    with open(malfamfile) as f:
        contents = f.readlines()
    print("Number of mal samples with mal family: {}".format(len(contents)))

    # Get malware dataset as dataframe
    mal_df = pd.read_csv(maldataset, encoding="utf-8")
    # Add malfamily column as first column of dataframe
    mal_df.insert(0,"malfamily", None)

    # Add family labels to malware dataset
    for c in contents:
        # Get the hash
        sample_hash = c.split("\t")[0]
        # Get the family label
        fam_val = c.split("\t")[1].replace("\n", "")
        if fam_val not in target_fam:
            fam_val = None
        # Get the row value of sample from dataset, based on hash value
        row_tar = ms_df.loc[ms_df['sha1']==sample_hash]
        # Add the family abel to 'malfamily' column
        ms_df.set_value(row_tar.index, 'malfamily', fam_val)

    # Drop all samples that have no family
    ms_df_new = ms_df.dropna(subset=['malfamily'])
    # Reset index for dropped samples
    ms_df_new.reset_index(inplace=True, drop=True)
    print(ms_df_new)

    # Get statistics of sample size of each family
    malfam_list = list(ms_df_new['malfamily'])
    counters = {}
    for i in malfam_list:
        if i not in counters.keys():
            counters[i] = 1
        else:
            counters[i] += 1
    print(counters)

    # Save the new malware dataset with family labels added
    csvfilename = "malfamily_{}.csv".format(len(ms_df_new))
    ms_df_new.to_csv(csvfilename, index=False, encoding="utf-8")
    print("Saved dataset as {}".format(csvfilename))
    print("Done")
