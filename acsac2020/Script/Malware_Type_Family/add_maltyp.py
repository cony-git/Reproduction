import pandas as pd
import os

if __name__ == "__main__":
    # Text file containing type labels
    maltypfile = "malwarebytes_types_15012.txt"
    # Get the anti-virus scanner used to get the type labels
    av_scanner = maltypfile.split("_")[0]
    # Malware dataset csv file to add type labels
    maldataset = "../../../Dataset_new/mal_dataset_22471.csv"

    # Selected types to add; normally put types with sample size > 200, based on malwarebytes
    maltyp_list = ["Trojan", "Adware", "Backdoor", "Worm", "Ransom", "Spyware", "PUP", "RiskWare"] 

    # Open and read text file containing type labels
    with open(maltypfile, "r") as tfile:
        contents = tfile.readlines()
    print("Number of mal samples with mal type: {}".format(len(contents)))

    # Get hashes and respective malware type into a dict
    hash_typ = {}
    for c in contents:
        hash_sha1 = c.split("\t")[0]
        mal_typ = c.split("\t")[1].replace("\n", "")
        if mal_typ in maltyp_list:
            hash_typ[hash_sha1] = mal_typ
        #hash_typ[hash_sha1] = mal_typ
            
    # Get malware dataset as dataframe
    mal_df = pd.read_csv(maldataset, encoding="utf-8")
    print("Number of mal samples in dataset: {}".format(len(mal_df)))
    # Add maltype column as first column
    mal_df.insert(0, "maltype", None)
    ori_hashes = list(mal_df['sha1'])
    
    # Add malware type to samples
    for h in ori_hashes:
        if h in hash_typ.keys():
            typ = hash_typ[h]
        else: typ = None
        row_tar = mal_df.loc[mal_df['sha1']==h]
        if pd.isna(row_tar['maltype']).bool():
            mal_df.at[row_tar.index, 'maltype'] = typ
        else:
            if not row_tar['maltype'].all() == typ:
                mal_df.at[row_tar.index, 'maltype'] = typ

    # Remove malware samples with no malware types
    mal_df_new = mal_df.dropna()
    mal_df_new.reset_index(inplace=True, drop=True)
    print("Number of mal samples in NEW dataset: {}".format(len(mal_df_new)))

    # Get breakdown of samples in each malware type
    maltypes = list(mal_df['maltype'])
    counters = {}
    for i in maltypes:
        if i not in counters.keys():
            counters[i] = 1
        else: counters[i] += 1
    print(counters)

    # Save the new malware dataset with added malware type
    csvfilename = "maltype_{}_{}.csv".format(av_scanner, len(mal_df_new))
    mal_df_new.to_csv(csvfilename, index=False, encoding="utf-8")
    print("Saved new dataset as {}".format(csvfilename))
    print("Done")
