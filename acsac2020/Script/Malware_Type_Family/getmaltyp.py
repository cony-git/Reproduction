import sys
import datetime
import os, json
from time import time

THRESHOLD_SCORE = 10

if __name__ == "__main__":
    if not len(sys.argv) == 3:
        print("ERROR: expecting 2 inputs but {} inputs given! Exiting program...".format(len(sys.argv)-1))
        sys.exit(0)

    # Dir containing the virustotal reports to be analysed
    json_reports_dir = sys.argv[1]
    # Anti-virus scanner to use to get malware type labels
    av_scanners = ["Malwarebytes", "Microsoft"]
    # User is to input which scanner to use
    av_scanner = av_scanners[int(sys.argv[2])]

    # Logfile to collect samples that have malware types
    sfilename = "{}_{}_success.txt".format(av_scanner, datetime.datetime.now().strftime("%Y%m%d-%H%M%S"))
    sfile = open(sfilename, "w+")
    # Logfile to collect samples that have no malware type and why they don't
    efilename = "{}_{}_error.txt".format(av_scanner, datetime.datetime.now().strftime("%Y%m%d-%H%M%S"))
    efile = open(efilename, "w+")

    # Get and add type labels to malware dataset
    success_counter = 0
    fail_counter = [ 0, 0, 0, 0]
    T0 = time()
    for f in os.listdir(json_reports_dir):
        file_path = os.path.join(json_reports_dir, f)
        #print(file_path)
        with open(file_path) as jfile:
             data = json.load(jfile)
        # Check if the report is a valid report
        if "positives" in data.keys():
            # Get the malicious score; number of anti-virus scanners that detected sample as malicious
            score = int((data['positives']/data['total'])*100)
            # Detected as malware if malicious score >= THRESHOLD_SCORE
            if score >= THRESHOLD_SCORE:
                # Check if specified anti-virus scanner is in list of anti-virus scanners
                if av_scanner in data['scans'].keys():
                    # Check if specified anti-virus scanner detect sample as positive
                    if data['scans'][av_scanner]['detected']:
                        typ = data['scans'][av_scanner]['result']
                        sfile.write("{}\t{}\n".format(data['sha1'], typ))
                        success_counter+=1
                    # 'Not detected': specified anti-virus scanner does not detect sample as malicious
                    else:
                        efile.write("{}\tNot detected\n".format(data['sha1']))
                        fail_counter[2]+=1
                # 'Not results': specified anti-virus scanner is not in the list of anti-virus scanners
                else:
                    efile.write("{}\tNo results\n".format(data['sha1']))
                    fail_counter[1]+=1
            # 'Not a malware': Sample is not detected as malware as malicious score < THRESHOLD_SCORE
            else:
                efile.write("{}\tNot a malware; {}\n".format(data['sha1'], score))
                fail_counter[0]+=1
        # 'Not a valid vt report': The report does not return any results from virustotal
        else:
            efile.write("{}\tNot a valid vt report\n".format(f.replace(".json", "")))
            fail_counter[3]+=1
    # Close the log files
    sfile.close()
    efile.close()
    
    print("Done in {}s".format(time()-T0))
    print("Number of samples without valid virustotal reports: {}".format(fail_counter[3]))
    print("With malware types: {}, Not a malware: {}, No results: {}, Not detected: {}".format(success_counter,
                                                                                               fail_counter[0],
                                                                                               fail_counter[1],
                                                                                               fail_counter[2]))
